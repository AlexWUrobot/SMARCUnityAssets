//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Smarc
{
    [Serializable]
    public class DVLBeamMsg : Message
    {
        public const string k_RosMessageName = "smarc_msgs/DVLBeam";
        public override string RosMessageName => k_RosMessageName;

        //  Copyright (c) 2016 The UUV Simulator Authors.
        //  All rights reserved.
        // 
        //  Licensed under the Apache License, Version 2.0 (the "License");
        //  you may not use this file except in compliance with the License.
        //  You may obtain a copy of the License at
        // 
        //      http://www.apache.org/licenses/LICENSE-2.0
        // 
        //  Unless required by applicable law or agreed to in writing, software
        //  distributed under the License is distributed on an "AS IS" BASIS,
        //  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        //  See the License for the specific language governing permissions and
        //  limitations under the License.
        //  measured range [m] or < 0 if invalid
        public double range;
        public double range_covariance;
        public double velocity;
        //  measured velocity [m/s] of corr. beam
        public double velocity_covariance;
        //  Beam link pose wrt DVL link frame
        public Geometry.PoseStampedMsg pose;

        public DVLBeamMsg()
        {
            this.range = 0.0;
            this.range_covariance = 0.0;
            this.velocity = 0.0;
            this.velocity_covariance = 0.0;
            this.pose = new Geometry.PoseStampedMsg();
        }

        public DVLBeamMsg(double range, double range_covariance, double velocity, double velocity_covariance, Geometry.PoseStampedMsg pose)
        {
            this.range = range;
            this.range_covariance = range_covariance;
            this.velocity = velocity;
            this.velocity_covariance = velocity_covariance;
            this.pose = pose;
        }

        public static DVLBeamMsg Deserialize(MessageDeserializer deserializer) => new DVLBeamMsg(deserializer);

        private DVLBeamMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.range);
            deserializer.Read(out this.range_covariance);
            deserializer.Read(out this.velocity);
            deserializer.Read(out this.velocity_covariance);
            this.pose = Geometry.PoseStampedMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.range);
            serializer.Write(this.range_covariance);
            serializer.Write(this.velocity);
            serializer.Write(this.velocity_covariance);
            serializer.Write(this.pose);
        }

        public override string ToString()
        {
            return "DVLBeamMsg: " +
            "\nrange: " + range.ToString() +
            "\nrange_covariance: " + range_covariance.ToString() +
            "\nvelocity: " + velocity.ToString() +
            "\nvelocity_covariance: " + velocity_covariance.ToString() +
            "\npose: " + pose.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
