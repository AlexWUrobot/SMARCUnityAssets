//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.SmarcMission
{
    [Serializable]
    public class BTCommandMsg : Message
    {
        public const string k_RosMessageName = "smarc_mission_msgs/BTCommand";
        public override string RosMessageName => k_RosMessageName;

        //  For now, we want max flexibility, so I'm just gonna
        //  make nodered and BT talk in JSON
        //  Still useful to split the CMD/FEEDBACK types clearly tho
        public const byte TYPE_CMD = 0;
        public const byte TYPE_FB = 1;
        public byte msg_type;
        //  also might be nice to have both a cmd and a feedback
        //  in the same message
        public string cmd_json;
        public string fb_json;

        public BTCommandMsg()
        {
            this.msg_type = 0;
            this.cmd_json = "";
            this.fb_json = "";
        }

        public BTCommandMsg(byte msg_type, string cmd_json, string fb_json)
        {
            this.msg_type = msg_type;
            this.cmd_json = cmd_json;
            this.fb_json = fb_json;
        }

        public static BTCommandMsg Deserialize(MessageDeserializer deserializer) => new BTCommandMsg(deserializer);

        private BTCommandMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.msg_type);
            deserializer.Read(out this.cmd_json);
            deserializer.Read(out this.fb_json);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.msg_type);
            serializer.Write(this.cmd_json);
            serializer.Write(this.fb_json);
        }

        public override string ToString()
        {
            return "BTCommandMsg: " +
            "\nmsg_type: " + msg_type.ToString() +
            "\ncmd_json: " + cmd_json.ToString() +
            "\nfb_json: " + fb_json.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
