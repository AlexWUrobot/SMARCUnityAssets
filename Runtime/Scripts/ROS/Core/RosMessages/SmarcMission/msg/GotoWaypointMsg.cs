//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.SmarcMission
{
    [Serializable]
    public class GotoWaypointMsg : Message
    {
        public const string k_RosMessageName = "smarc_mission_msgs/GotoWaypoint";
        public override string RosMessageName => k_RosMessageName;

        //  target pose in local UTM zone ENU coordinates
        //  UTM zone used defined by global
        //  /utm_zone and /utm_band ROS params
        public Geometry.PoseStampedMsg pose;
        //  required proximity in meters to waypoint in
        //  order to consider the waypoint as reached
        public double goal_tolerance;
        //  Defines the type of z control used going there
        public const byte Z_CONTROL_NONE = 0;
        public const byte Z_CONTROL_DEPTH = 1;
        public const byte Z_CONTROL_ALTITUDE = 2;
        public byte z_control_mode;
        public double travel_altitude;
        public double travel_depth;
        //  Defines the type of speed control used going there
        public const byte SPEED_CONTROL_NONE = 0;
        public const byte SPEED_CONTROL_RPM = 1;
        public const byte SPEED_CONTROL_SPEED = 2;
        public byte speed_control_mode;
        public double travel_rpm;
        public double travel_speed;
        public double lat;
        public double lon;
        public double arrival_heading;
        public bool use_heading;
        public string name;

        public GotoWaypointMsg()
        {
            this.pose = new Geometry.PoseStampedMsg();
            this.goal_tolerance = 0.0;
            this.z_control_mode = 0;
            this.travel_altitude = 0.0;
            this.travel_depth = 0.0;
            this.speed_control_mode = 0;
            this.travel_rpm = 0.0;
            this.travel_speed = 0.0;
            this.lat = 0.0;
            this.lon = 0.0;
            this.arrival_heading = 0.0;
            this.use_heading = false;
            this.name = "";
        }

        public GotoWaypointMsg(Geometry.PoseStampedMsg pose, double goal_tolerance, byte z_control_mode, double travel_altitude, double travel_depth, byte speed_control_mode, double travel_rpm, double travel_speed, double lat, double lon, double arrival_heading, bool use_heading, string name)
        {
            this.pose = pose;
            this.goal_tolerance = goal_tolerance;
            this.z_control_mode = z_control_mode;
            this.travel_altitude = travel_altitude;
            this.travel_depth = travel_depth;
            this.speed_control_mode = speed_control_mode;
            this.travel_rpm = travel_rpm;
            this.travel_speed = travel_speed;
            this.lat = lat;
            this.lon = lon;
            this.arrival_heading = arrival_heading;
            this.use_heading = use_heading;
            this.name = name;
        }

        public static GotoWaypointMsg Deserialize(MessageDeserializer deserializer) => new GotoWaypointMsg(deserializer);

        private GotoWaypointMsg(MessageDeserializer deserializer)
        {
            this.pose = Geometry.PoseStampedMsg.Deserialize(deserializer);
            deserializer.Read(out this.goal_tolerance);
            deserializer.Read(out this.z_control_mode);
            deserializer.Read(out this.travel_altitude);
            deserializer.Read(out this.travel_depth);
            deserializer.Read(out this.speed_control_mode);
            deserializer.Read(out this.travel_rpm);
            deserializer.Read(out this.travel_speed);
            deserializer.Read(out this.lat);
            deserializer.Read(out this.lon);
            deserializer.Read(out this.arrival_heading);
            deserializer.Read(out this.use_heading);
            deserializer.Read(out this.name);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.pose);
            serializer.Write(this.goal_tolerance);
            serializer.Write(this.z_control_mode);
            serializer.Write(this.travel_altitude);
            serializer.Write(this.travel_depth);
            serializer.Write(this.speed_control_mode);
            serializer.Write(this.travel_rpm);
            serializer.Write(this.travel_speed);
            serializer.Write(this.lat);
            serializer.Write(this.lon);
            serializer.Write(this.arrival_heading);
            serializer.Write(this.use_heading);
            serializer.Write(this.name);
        }

        public override string ToString()
        {
            return "GotoWaypointMsg: " +
            "\npose: " + pose.ToString() +
            "\ngoal_tolerance: " + goal_tolerance.ToString() +
            "\nz_control_mode: " + z_control_mode.ToString() +
            "\ntravel_altitude: " + travel_altitude.ToString() +
            "\ntravel_depth: " + travel_depth.ToString() +
            "\nspeed_control_mode: " + speed_control_mode.ToString() +
            "\ntravel_rpm: " + travel_rpm.ToString() +
            "\ntravel_speed: " + travel_speed.ToString() +
            "\nlat: " + lat.ToString() +
            "\nlon: " + lon.ToString() +
            "\narrival_heading: " + arrival_heading.ToString() +
            "\nuse_heading: " + use_heading.ToString() +
            "\nname: " + name.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
