//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.PSDKInterfaces
{
    [Serializable]
    public class SDKCtrlInfoMsg : Message
    {
        public const string k_RosMessageName = "PSDKInterfaces/SDKCtrlInfo";
        public override string RosMessageName => k_RosMessageName;

        public Std.HeaderMsg header;
        public byte control_mode;
        //  see CtlrMode in dji_status.hpp
        public byte device_status;
        //  0->rc  1->app  4->serial 
        public byte flight_status;
        //  1->opensd  0->close 
        public byte vrc_status;
        public byte reserved;

        public SDKCtrlInfoMsg()
        {
            this.header = new Std.HeaderMsg();
            this.control_mode = 0;
            this.device_status = 0;
            this.flight_status = 0;
            this.vrc_status = 0;
            this.reserved = 0;
        }

        public SDKCtrlInfoMsg(Std.HeaderMsg header, byte control_mode, byte device_status, byte flight_status, byte vrc_status, byte reserved)
        {
            this.header = header;
            this.control_mode = control_mode;
            this.device_status = device_status;
            this.flight_status = flight_status;
            this.vrc_status = vrc_status;
            this.reserved = reserved;
        }

        public static SDKCtrlInfoMsg Deserialize(MessageDeserializer deserializer) => new SDKCtrlInfoMsg(deserializer);

        private SDKCtrlInfoMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.control_mode);
            deserializer.Read(out this.device_status);
            deserializer.Read(out this.flight_status);
            deserializer.Read(out this.vrc_status);
            deserializer.Read(out this.reserved);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.control_mode);
            serializer.Write(this.device_status);
            serializer.Write(this.flight_status);
            serializer.Write(this.vrc_status);
            serializer.Write(this.reserved);
        }

        public override string ToString()
        {
            return "SDKCtrlInfoMsg: " +
            "\nheader: " + header.ToString() +
            "\ncontrol_mode: " + control_mode.ToString() +
            "\ndevice_status: " + device_status.ToString() +
            "\nflight_status: " + flight_status.ToString() +
            "\nvrc_status: " + vrc_status.ToString() +
            "\nreserved: " + reserved.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
