//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.PSDKInterfaces
{
    [Serializable]
    public class RCConnectionStatusMsg : Message
    {
        public const string k_RosMessageName = "PSDKInterfaces/RCConnectionStatus";
        public override string RosMessageName => k_RosMessageName;

        public Std.HeaderMsg header;
        public byte air_connection;
        //  Sky side is connected, i.e., receiver is connected to FC
        public byte ground_connection;
        //  Ground side is connected, i.e., RC is on and connected to FC
        public byte app_connection;
        //  Mobile App is connected to RC
        public byte air_or_ground_disconnected;
        //  0 if sky or ground side is disconnected for 3 seconds

        public RCConnectionStatusMsg()
        {
            this.header = new Std.HeaderMsg();
            this.air_connection = 0;
            this.ground_connection = 0;
            this.app_connection = 0;
            this.air_or_ground_disconnected = 0;
        }

        public RCConnectionStatusMsg(Std.HeaderMsg header, byte air_connection, byte ground_connection, byte app_connection, byte air_or_ground_disconnected)
        {
            this.header = header;
            this.air_connection = air_connection;
            this.ground_connection = ground_connection;
            this.app_connection = app_connection;
            this.air_or_ground_disconnected = air_or_ground_disconnected;
        }

        public static RCConnectionStatusMsg Deserialize(MessageDeserializer deserializer) => new RCConnectionStatusMsg(deserializer);

        private RCConnectionStatusMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.air_connection);
            deserializer.Read(out this.ground_connection);
            deserializer.Read(out this.app_connection);
            deserializer.Read(out this.air_or_ground_disconnected);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.air_connection);
            serializer.Write(this.ground_connection);
            serializer.Write(this.app_connection);
            serializer.Write(this.air_or_ground_disconnected);
        }

        public override string ToString()
        {
            return "RCConnectionStatusMsg: " +
            "\nheader: " + header.ToString() +
            "\nair_connection: " + air_connection.ToString() +
            "\nground_connection: " + ground_connection.ToString() +
            "\napp_connection: " + app_connection.ToString() +
            "\nair_or_ground_disconnected: " + air_or_ground_disconnected.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
