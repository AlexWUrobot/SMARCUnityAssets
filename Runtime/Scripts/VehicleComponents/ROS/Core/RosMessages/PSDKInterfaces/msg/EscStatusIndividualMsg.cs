//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.PsdkInterfaces
{
    [Serializable]
    public class EscStatusIndividualMsg : Message
    {
        public const string k_RosMessageName = "psdk_interfaces/EscStatusIndividual";
        public override string RosMessageName => k_RosMessageName;

        public short current;
        //  ESC current, unit: mA
        public short speed;
        //  ESC speed, unit: rpm
        public ushort voltage;
        //  Input power from battery to ESC, unit: mV
        public short temperature;
        //  ESC temperature, unit: degree C
        public short stall;
        //  Motor is stall
        public short empty;
        //  Motor has no load
        public short unbalanced;
        //  Motor speed is unbalanced
        public short esc_disconnected;
        //  ESC is disconnected
        public short temperature_high;
        //  Temperature is high

        public EscStatusIndividualMsg()
        {
            this.current = 0;
            this.speed = 0;
            this.voltage = 0;
            this.temperature = 0;
            this.stall = 0;
            this.empty = 0;
            this.unbalanced = 0;
            this.esc_disconnected = 0;
            this.temperature_high = 0;
        }

        public EscStatusIndividualMsg(short current, short speed, ushort voltage, short temperature, short stall, short empty, short unbalanced, short esc_disconnected, short temperature_high)
        {
            this.current = current;
            this.speed = speed;
            this.voltage = voltage;
            this.temperature = temperature;
            this.stall = stall;
            this.empty = empty;
            this.unbalanced = unbalanced;
            this.esc_disconnected = esc_disconnected;
            this.temperature_high = temperature_high;
        }

        public static EscStatusIndividualMsg Deserialize(MessageDeserializer deserializer) => new EscStatusIndividualMsg(deserializer);

        private EscStatusIndividualMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.current);
            deserializer.Read(out this.speed);
            deserializer.Read(out this.voltage);
            deserializer.Read(out this.temperature);
            deserializer.Read(out this.stall);
            deserializer.Read(out this.empty);
            deserializer.Read(out this.unbalanced);
            deserializer.Read(out this.esc_disconnected);
            deserializer.Read(out this.temperature_high);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.current);
            serializer.Write(this.speed);
            serializer.Write(this.voltage);
            serializer.Write(this.temperature);
            serializer.Write(this.stall);
            serializer.Write(this.empty);
            serializer.Write(this.unbalanced);
            serializer.Write(this.esc_disconnected);
            serializer.Write(this.temperature_high);
        }

        public override string ToString()
        {
            return "EscStatusIndividualMsg: " +
            "\ncurrent: " + current.ToString() +
            "\nspeed: " + speed.ToString() +
            "\nvoltage: " + voltage.ToString() +
            "\ntemperature: " + temperature.ToString() +
            "\nstall: " + stall.ToString() +
            "\nempty: " + empty.ToString() +
            "\nunbalanced: " + unbalanced.ToString() +
            "\nesc_disconnected: " + esc_disconnected.ToString() +
            "\ntemperature_high: " + temperature_high.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
