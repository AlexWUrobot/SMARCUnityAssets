//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.PsdkInterfaces
{
    [Serializable]
    public class RTKYawMsg : Message
    {
        public const string k_RosMessageName = "psdk_interfaces/RTKYaw";
        public override string RosMessageName => k_RosMessageName;

        public Std.HeaderMsg header;
        public ushort yaw;
        //  unit: deg. The RTK yaw will provide the vector from ANT1 to ANT2 as configured in DJI Assistant 2. This
        //  means that the value of RTK yaw will be 90deg offset from the yaw of the aircraft.

        public RTKYawMsg()
        {
            this.header = new Std.HeaderMsg();
            this.yaw = 0;
        }

        public RTKYawMsg(Std.HeaderMsg header, ushort yaw)
        {
            this.header = header;
            this.yaw = yaw;
        }

        public static RTKYawMsg Deserialize(MessageDeserializer deserializer) => new RTKYawMsg(deserializer);

        private RTKYawMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.yaw);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.yaw);
        }

        public override string ToString()
        {
            return "RTKYawMsg: " +
            "\nheader: " + header.ToString() +
            "\nyaw: " + yaw.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
