//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.PSDKInterfaces
{
    [Serializable]
    public class ControlModeMsg : Message
    {
        public const string k_RosMessageName = "PSDKInterfaces/ControlMode";
        public override string RosMessageName => k_RosMessageName;

        public Std.HeaderMsg header;
        public byte control_mode;
        //  The modes in which the aircraft is being controlled (control loops being applied on horizontal, vertical and yaw axes of the aircraft)
        public byte device_mode;
        //  0->RC  1->MSDK  4->PSDK
        public byte control_auth;
        //  1->Has control authority 0->No control authority

        public ControlModeMsg()
        {
            this.header = new Std.HeaderMsg();
            this.control_mode = 0;
            this.device_mode = 0;
            this.control_auth = 0;
        }

        public ControlModeMsg(Std.HeaderMsg header, byte control_mode, byte device_mode, byte control_auth)
        {
            this.header = header;
            this.control_mode = control_mode;
            this.device_mode = device_mode;
            this.control_auth = control_auth;
        }

        public static ControlModeMsg Deserialize(MessageDeserializer deserializer) => new ControlModeMsg(deserializer);

        private ControlModeMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.control_mode);
            deserializer.Read(out this.device_mode);
            deserializer.Read(out this.control_auth);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.control_mode);
            serializer.Write(this.device_mode);
            serializer.Write(this.control_auth);
        }

        public override string ToString()
        {
            return "ControlModeMsg: " +
            "\nheader: " + header.ToString() +
            "\ncontrol_mode: " + control_mode.ToString() +
            "\ndevice_mode: " + device_mode.ToString() +
            "\ncontrol_auth: " + control_auth.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
